{"version":3,"sources":["logic.js","Components/SideBar.js","App.js","reportWebVitals.js","index.js"],"names":["updateNotation","notes","showSharps","correctNotation","i","length","push","split","getKeysByRoot","root","rootIndex","indexOf","major","minor","Sidebar","handleClick","alert","updateNotationTwo","Nav","className","map","note","index","Item","onClick","href","App","useState","setNote","setMajor","setMinor","setShowSharps","CreateTable","onHandleChange","Table","striped","bordered","hover","variant","type","onChange","checked","degree","Container","fluid","Row","Col","xs","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","name","content","document","getElementById"],"mappings":"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","file":"static/js/main.17522cb6.chunk.js","sourcesContent":["const getListOfNotes = () =>{\n    return (['A','A# / Bb','B','C','C# / Db','D','D# / Eb','E','F','F# / Gb','G','G# / Ab'])\n}\n\nconst updateNotationTwo=(notes=[],showSharps=true) =>{\n    const correctNotation = []\n    for(let i = 0;i<12;i++){\n        if(notes[i].length >1){\n            if(showSharps){correctNotation.push(notes[i].split(' / ')[0])}\n            else{correctNotation.push(notes[i].split(' / ')[1])}\n        }else{correctNotation.push(notes[i])}\n    }\n    return correctNotation\n}\n\nconst updateNotation=(notes=[],showSharps=true) =>{\n    const correctNotation = []\n    for(let i = 0;i<7;i++){\n        if(notes[i].length >1){\n            if(showSharps){correctNotation.push(notes[i].split(' / ')[0])}\n            else{correctNotation.push(notes[i].split(' / ')[1])}\n        }else{correctNotation.push(notes[i])}\n    }\n    return correctNotation\n}\n\nconst getCircleOfFifths = ()=>{\n    const notes = getListOfNotes();\n    const circleOfFifths= []\n    for(let index = 0;index < 12;index++){\n        circleOfFifths.push(notes[(index+7)%12])\n    }\n    return (circleOfFifths)\n}\n\nconst getKeysByRoot = (root='',showSharps=true) => {\n    const notes = getListOfNotes()\n    let rootIndex = notes.indexOf(root)\n    if(rootIndex===-1){\n        const newNotes = []\n        for(let i = 0; i< notes.length;i++){\n            notes[i].split(' / ')\n            if(root === notes[i].split(' / ')[0] || root === notes[i].split(' / ')[1]){\n                rootIndex=i\n            }\n        }\n\n    }if(rootIndex===-1) return {'major':[],'minor':[]}\n    const major = []\n    const minor = []\n    major.push(notes[rootIndex])\n    major.push(notes[(rootIndex+2)%12])\n    major.push(notes[(rootIndex+4)%12])\n    major.push(notes[(rootIndex+5)%12])\n    major.push(notes[(rootIndex+7)%12])\n    major.push(notes[(rootIndex+9)%12])\n    major.push(notes[(rootIndex+11)%12])\n    minor.push(notes[rootIndex])\n    minor.push(notes[(rootIndex+2)%12])\n    minor.push(notes[(rootIndex+3)%12])\n    minor.push(notes[(rootIndex+5)%12])\n    minor.push(notes[(rootIndex+7)%12])\n    minor.push(notes[(rootIndex+8)%12])\n    minor.push(notes[(rootIndex+10)%12])\n\n    return{'major':updateNotation(major,showSharps),'minor':updateNotation(minor,showSharps)}\n\n}\nexport {getListOfNotes,getCircleOfFifths,getKeysByRoot,updateNotation,updateNotationTwo}","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { getListOfNotes,updateNotationTwo } from \"../logic\";\nimport './Sidebar.css'\n\nconst Sidebar = ({ showSharps=false,handleClick = (i) => alert(i) }) => {\n    const notes = updateNotationTwo(getListOfNotes(),showSharps);\n    return (\n        <Nav className=\"col-md-12 d-md-block sidebar\" >\n                {notes.map((note, index) => {\n                    return (\n                        <Nav.Item onClick={() => handleClick(note)} key={index}>\n                            <a href='#' className='nav-link text-light'>{note}</a>\n                        </Nav.Item>)\n                })}\n        </Nav>\n    );\n};\nexport default Sidebar","import './App.css';\nimport { getListOfNotes, getCircleOfFifths, getKeysByRoot } from './logic'\nimport React, { useState } from 'react'\nimport { Container, Col, Row, Table } from 'react-bootstrap'\nimport Sidebar from './Components/SideBar'\n\n\n\nfunction App() {\n  const [note, setNote] = useState('')\n  const [major, setMajor] = useState([])\n  const [minor, setMinor] = useState([])\n  const [showSharps, setShowSharps] = useState(false)\n\n  const HandleClick = (note) => {\n    setNote(note)\n    setMajor(getKeysByRoot(note, showSharps).major)\n    setMinor(getKeysByRoot(note, showSharps).minor)\n  }\n\n  const HandleChange = (event) => {\n    setShowSharps(event.target.checked)\n    setMajor(getKeysByRoot(note, event.target.checked).major)\n    setMinor(getKeysByRoot(note, event.target.checked).minor)\n\n  }\n\n  const CreateTable = ({ onHandleChange }) => {\n    return (\n      <div className='mt-3'>\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th><input className='mr-2' type='checkbox' onChange={onHandleChange} checked={showSharps} />{showSharps ? 'Sharps' : 'Flats'}</th>\n            <th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr><td>Major</td>{major.map((degree, index) => { return (<td key={index}>{degree}</td>) })}</tr>\n          <tr><td>Minor</td>{minor.map((degree, index) => { return (<td key={index}>{degree}</td>) })}</tr>\n        </tbody>\n      </Table>\n      </div>\n    )\n  }\n\n  return (\n    <Container fluid className=\"App\">\n      <Row>\n        <Col xs={2}><Sidebar handleClick={HandleClick} showSharps={showSharps} /></Col>\n        <Col className='bg-secondary' xs={10}><CreateTable onHandleChange={HandleChange} /></Col>\n      </Row>\n    </Container >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App >\n      <meta name=\"viewport\" content=\"width=device-width\" />\n    </App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}